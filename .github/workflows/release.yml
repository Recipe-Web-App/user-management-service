name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run tests
        run: |
          poetry run pytest tests/unit/ -v --tb=short
          poetry run pytest tests/component/ -v --tb=short

      - name: Run quality checks
        run: |
          poetry run black --check .
          poetry run ruff check .
          poetry run mypy .

      - name: Release
        uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: python
          package-name: user-management-service
          changelog-types: |
            [
              {"type":"feat","section":"Features","hidden":false},
              {"type":"fix","section":"Bug Fixes","hidden":false},
              {"type":"perf","section":"Performance Improvements","hidden":false},
              {"type":"revert","section":"Reverts","hidden":false},
              {"type":"docs","section":"Documentation","hidden":false},
              {"type":"style","section":"Styles","hidden":true},
              {"type":"chore","section":"Miscellaneous Chores","hidden":true},
              {"type":"refactor","section":"Code Refactoring","hidden":true},
              {"type":"test","section":"Tests","hidden":true},
              {"type":"build","section":"Build System","hidden":true},
              {"type":"ci","section":"Continuous Integration","hidden":true}
            ]

      - name: Update pyproject.toml version
        if: ${{ steps.release.outputs.release_created }}
        run: |
          NEW_VERSION="${{ steps.release.outputs.tag_name }}"
          NEW_VERSION=${NEW_VERSION#v}  # Remove 'v' prefix if present
          poetry version $NEW_VERSION

      - name: Build package
        if: ${{ steps.release.outputs.release_created }}
        run: poetry build

      - name: Upload Release Artifact
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} dist/*
