---
# k8s/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management
  namespace: user-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-management
  template:
    metadata:
      labels:
        app: user-management
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      containers:
        - name: user-management
          image: user-management-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8000
          env:
            - name: USER_MANAGEMENT_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: USER_MANAGEMENT_DB_USER
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: POSTGRES_PORT
            - name: POSTGRES_SCHEMA
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: POSTGRES_SCHEMA
            - name: USER_MANAGEMENT_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-management-db-password
                  key: USER_MANAGEMENT_DB_PASSWORD
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: user-management-db-password
                  key: JWT_SECRET_KEY
            - name: JWT_SIGNING_ALGORITHM
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: JWT_SIGNING_ALGORITHM
            - name: ACCESS_TOKEN_EXPIRE_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: ACCESS_TOKEN_EXPIRE_MINUTES
            - name: REFRESH_TOKEN_EXPIRE_DAYS
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: REFRESH_TOKEN_EXPIRE_DAYS
            - name: PASSWORD_RESET_TOKEN_EXPIRE_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: PASSWORD_RESET_TOKEN_EXPIRE_MINUTES
            - name: ALLOWED_ORIGIN_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: ALLOWED_ORIGIN_HOSTS
            - name: ALLOWED_CREDENTIALS
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: ALLOWED_CREDENTIALS
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: REDIS_PORT
            - name: REDIS_DB
              valueFrom:
                configMapKeyRef:
                  name: user-management-config
                  key: REDIS_DB
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-management-db-password
                  key: REDIS_PASSWORD
          livenessProbe:
            httpGet:
              path: /api/v1/user-management/health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /api/v1/user-management/health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 60
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
