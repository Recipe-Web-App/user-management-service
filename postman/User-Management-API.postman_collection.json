{
  "info": {
    "name": "User Management API",
    "description": "Complete API collection for User Management Service endpoints including authentication, user management, admin functions, social features, and notifications",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "Health Check",
      "description": "System health and status endpoints",
      "item": [
        {
          "name": "Readiness Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Readiness check response received', function () {",
                  "    pm.expect([200, 503]).to.include(pm.response.code);",
                  "});",
                  "",
                  "pm.test('Response contains readiness status', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('ready');",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(response).to.have.property('dependencies');",
                  "});",
                  "",
                  "pm.test('Dependencies status included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.dependencies).to.have.property('database');",
                  "    pm.expect(response.dependencies).to.have.property('redis');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/health",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Liveness Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Liveness check successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains liveness status', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('alive');",
                  "    pm.expect(response).to.have.property('status');",
                  "    pm.expect(response).to.have.property('message');",
                  "    pm.expect(response.alive).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/live",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["live"]
            }
          }
        }
      ]
    },
    {
      "name": "Authentication",
      "description": "User authentication and authorization endpoints",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Registration successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Extract authentication tokens', function () {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('userManagementServiceAccessToken', response.token.accessToken);",
                  "    pm.environment.set('userManagementServiceRefreshToken', response.token.refreshToken);",
                  "    pm.environment.set('userManagementServiceUserId', response.user.userId);",
                  "    pm.environment.set('userManagementServiceUsername', response.user.username);",
                  "    pm.environment.set('userManagementServiceUserEmail', response.user.email);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_data\": {\n    \"username\": \"{{userManagementServiceTestUserUsername}}\",\n    \"email\": \"{{userManagementServiceTestUserEmail}}\",\n    \"password\": \"{{userManagementServiceTestUserPassword}}\",\n    \"full_name\": \"{{userManagementServiceTestUserFullName}}\",\n    \"bio\": \"{{userManagementServiceTestUserBio}}\"\n  }\n}"
            },
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{userManagementServiceAuthBaseUrl}}/register",
              "host": ["{{userManagementServiceAuthBaseUrl}}"],
              "path": ["register"]
            }
          }
        },
        {
          "name": "Login User (Username)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Extract authentication tokens', function () {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('userManagementServiceAccessToken', response.token.accessToken);",
                  "    pm.environment.set('userManagementServiceRefreshToken', response.token.refreshToken);",
                  "    pm.environment.set('userManagementServiceUserId', response.user.userId);",
                  "    pm.environment.set('userManagementServiceUsername', response.user.username);",
                  "    pm.environment.set('userManagementServiceUserEmail', response.user.email);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{userManagementServiceTestUserUsername}}\",\n  \"password\": \"{{userManagementServiceTestUserPassword}}\"\n}"
            },
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{userManagementServiceAuthBaseUrl}}/login",
              "host": ["{{userManagementServiceAuthBaseUrl}}"],
              "path": ["login"]
            }
          }
        },
        {
          "name": "Login User (Email)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Extract authentication tokens', function () {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('userManagementServiceAccessToken', response.token.accessToken);",
                  "    pm.environment.set('userManagementServiceRefreshToken', response.token.refreshToken);",
                  "    pm.environment.set('userManagementServiceUserId', response.user.userId);",
                  "    pm.environment.set('userManagementServiceUsername', response.user.username);",
                  "    pm.environment.set('userManagementServiceUserEmail', response.user.email);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{userManagementServiceTestUserEmail}}\",\n  \"password\": \"{{userManagementServiceTestUserPassword}}\"\n}"
            },
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{userManagementServiceAuthBaseUrl}}/login",
              "host": ["{{userManagementServiceAuthBaseUrl}}"],
              "path": ["login"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Token refresh successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Update authentication tokens', function () {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('userManagementServiceAccessToken', response.token.accessToken);",
                  "    pm.environment.set('userManagementServiceRefreshToken', response.token.refreshToken);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{userManagementServiceRefreshToken}}\"\n}"
            },
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{userManagementServiceAuthBaseUrl}}/refresh",
              "host": ["{{userManagementServiceAuthBaseUrl}}"],
              "path": ["refresh"]
            }
          }
        },
        {
          "name": "Request Password Reset",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Password reset request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{userManagementServiceTestUserEmail}}\"\n}"
            },
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{userManagementServiceAuthBaseUrl}}/reset-password",
              "host": ["{{userManagementServiceAuthBaseUrl}}"],
              "path": ["reset-password"]
            }
          }
        },
        {
          "name": "Confirm Password Reset",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Password reset confirmed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reset_token\": \"{{userManagementServiceResetToken}}\",\n  \"new_password\": \"{{userManagementServiceNewPassword}}\"\n}"
            },
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{userManagementServiceAuthBaseUrl}}/reset-password/confirm",
              "host": ["{{userManagementServiceAuthBaseUrl}}"],
              "path": ["reset-password", "confirm"]
            }
          }
        },
        {
          "name": "Logout User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Logout successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Clear authentication tokens', function () {",
                  "    pm.environment.unset('userManagementServiceAccessToken');",
                  "    pm.environment.unset('userManagementServiceRefreshToken');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceAuthBaseUrl}}/logout",
              "host": ["{{userManagementServiceAuthBaseUrl}}"],
              "path": ["logout"]
            }
          }
        }
      ]
    },
    {
      "name": "User Management",
      "description": "User profile and account management endpoints",
      "item": [
        {
          "name": "Get User Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Profile retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains user data', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('user');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/{{userManagementServiceUserId}}/profile",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["users", "{{userManagementServiceUserId}}", "profile"]
            }
          }
        },
        {
          "name": "Update User Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Profile updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{userManagementServiceTestUserUsername}}_updated\",\n  \"email\": \"{{userManagementServiceTestUserEmail}}\",\n  \"full_name\": \"{{userManagementServiceTestUserFullName}} Updated\",\n  \"bio\": \"{{userManagementServiceTestUserBio}} - Updated bio\"\n}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/profile",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["users", "profile"]
            }
          }
        },
        {
          "name": "Search Users - Default",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Search successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains results', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('results');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/search",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["users", "search"]
            }
          }
        },
        {
          "name": "Search Users - With Query",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Search with query successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/search?q=test&limit=10&offset=0",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["users", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "test"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            }
          }
        },
        {
          "name": "Search Users - Count Only",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Count query successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "noauth"
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/search?count_only=true",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["users", "search"],
              "query": [
                {
                  "key": "count_only",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "Request Account Deletion",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Account deletion request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/account/delete-request",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["users", "account", "delete-request"]
            }
          }
        },
        {
          "name": "Confirm Account Deletion",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Account deletion confirmed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"confirmation_token\": \"{{userManagementServiceDeletionToken}}\"\n}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/account",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["users", "account"]
            }
          }
        }
      ]
    },
    {
      "name": "Admin Functions",
      "description": "Administrative endpoints for system management",
      "item": [
        {
          "name": "Get Redis Session Stats",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Redis stats retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains session data', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('stats');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAdminAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/admin/redis/session-stats",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["admin", "redis", "session-stats"]
            }
          }
        },
        {
          "name": "Get User Statistics",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User stats retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAdminAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/admin/users/stats",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["admin", "users", "stats"]
            }
          }
        },
        {
          "name": "Get System Health",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('System health retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAdminAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/admin/health",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["admin", "health"]
            }
          }
        },
        {
          "name": "Force Logout User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Force logout successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAdminAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/admin/users/{{userManagementServiceTargetUserId}}/force-logout",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": [
                "admin",
                "users",
                "{{userManagementServiceTargetUserId}}",
                "force-logout"
              ]
            }
          }
        },
        {
          "name": "Clear All Redis Sessions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Sessions cleared successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAdminAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/admin/redis/sessions",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["admin", "redis", "sessions"]
            }
          }
        }
      ]
    },
    {
      "name": "Social Features",
      "description": "User social interaction endpoints",
      "item": [
        {
          "name": "Get Following List - Default",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Following list retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/following",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["following"]
            }
          }
        },
        {
          "name": "Get Following List - Custom Pagination",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Following list with pagination retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/following?limit=10&offset=5",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["following"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "offset",
                  "value": "5"
                }
              ]
            }
          }
        },
        {
          "name": "Get Following List - Count Only",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Following count retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/following?count_only=true",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["following"],
              "query": [
                {
                  "key": "count_only",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "Get Followers List - Default",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Followers list retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/{{userManagementServiceTargetUserId}}/followers",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": [
                "users",
                "{{userManagementServiceTargetUserId}}",
                "followers"
              ]
            }
          }
        },
        {
          "name": "Get Followers List - Custom Pagination",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Followers list with pagination retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/{{userManagementServiceTargetUserId}}/followers?limit=15&offset=10",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": [
                "users",
                "{{userManagementServiceTargetUserId}}",
                "followers"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "15"
                },
                {
                  "key": "offset",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Followers List - Count Only",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Followers count retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/{{userManagementServiceTargetUserId}}/followers?count_only=true",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": [
                "users",
                "{{userManagementServiceTargetUserId}}",
                "followers"
              ],
              "query": [
                {
                  "key": "count_only",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "Follow User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Follow user successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/{{userManagementServiceUserId}}/follow/{{userManagementServiceTargetUserId}}",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": [
                "users",
                "{{userManagementServiceUserId}}",
                "follow",
                "{{userManagementServiceTargetUserId}}"
              ]
            }
          }
        },
        {
          "name": "Unfollow User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Unfollow user successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/{{userManagementServiceUserId}}/follow/{{userManagementServiceTargetUserId}}",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": [
                "users",
                "{{userManagementServiceUserId}}",
                "follow",
                "{{userManagementServiceTargetUserId}}"
              ]
            }
          }
        },
        {
          "name": "Get User Activity",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User activity retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/users/{{userManagementServiceTargetUserId}}/activity?per_type_limit=5",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": [
                "users",
                "{{userManagementServiceTargetUserId}}",
                "activity"
              ],
              "query": [
                {
                  "key": "per_type_limit",
                  "value": "5"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Notifications",
      "description": "User notification management endpoints",
      "item": [
        {
          "name": "Get Notifications - Default",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Notifications retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/notifications",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["notifications"]
            }
          }
        },
        {
          "name": "Get Notifications - Custom Pagination",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Notifications with pagination retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/notifications?limit=10&offset=5",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["notifications"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "offset",
                  "value": "5"
                }
              ]
            }
          }
        },
        {
          "name": "Get Notifications - Count Only",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Notification count retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/notifications?count_only=true",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["notifications"],
              "query": [
                {
                  "key": "count_only",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "Mark Notification as Read",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Notification marked as read successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/notifications/{{userManagementServiceNotificationId}}/read",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": [
                "notifications",
                "{{userManagementServiceNotificationId}}",
                "read"
              ]
            }
          }
        },
        {
          "name": "Mark All Notifications as Read",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('All notifications marked as read successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains read notification IDs', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('read_notification_ids');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/notifications/read-all",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["notifications", "read-all"]
            }
          }
        },
        {
          "name": "Delete Notifications",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Notifications deleted successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains deleted count', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('deleted_count');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notification_ids\": [\n    \"{{userManagementServiceNotificationId1}}\",\n    \"{{userManagementServiceNotificationId2}}\"\n  ]\n}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/notifications",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["notifications"]
            }
          }
        },
        {
          "name": "Get Notification Preferences",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Notification preferences retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/notifications/preferences",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["notifications", "preferences"]
            }
          }
        },
        {
          "name": "Update Notification Preferences",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Notification preferences updated successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notification\": {\n    \"email_notifications\": false,\n    \"push_notifications\": true,\n    \"sms_notifications\": true,\n    \"marketing_emails\": false,\n    \"security_alerts\": true,\n    \"activity_summaries\": false,\n    \"recipe_recommendations\": true,\n    \"social_interactions\": false\n  },\n  \"display\": {\n    \"font_size\": \"LARGE\",\n    \"color_scheme\": \"DARK\",\n    \"layout_density\": \"COMPACT\",\n    \"show_images\": true,\n    \"compact_mode\": false\n  },\n  \"theme\": {\n    \"dark_mode\": true,\n    \"light_mode\": false,\n    \"auto_theme\": false,\n    \"custom_theme\": \"SOLARIZED\"\n  },\n  \"privacy\": {\n    \"profile_visibility\": \"PRIVATE\",\n    \"recipe_visibility\": \"PUBLIC\",\n    \"activity_visibility\": \"FRIENDS_ONLY\",\n    \"contact_info_visibility\": \"PRIVATE\",\n    \"data_sharing\": false,\n    \"analytics_tracking\": true\n  },\n  \"security\": {\n    \"two_factor_auth\": true,\n    \"login_notifications\": false,\n    \"session_timeout\": true,\n    \"password_requirements\": true\n  },\n  \"sound\": {\n    \"notification_sounds\": false,\n    \"system_sounds\": true,\n    \"volume_level\": false,\n    \"mute_notifications\": true\n  },\n  \"social\": {\n    \"friend_requests\": false,\n    \"message_notifications\": true,\n    \"group_invites\": false,\n    \"share_activity\": true\n  },\n  \"language\": {\n    \"primary_language\": \"EN\",\n    \"secondary_language\": \"ES\",\n    \"translation_enabled\": true\n  },\n  \"accessibility\": {\n    \"screen_reader\": true,\n    \"high_contrast\": false,\n    \"reduced_motion\": true,\n    \"large_text\": false,\n    \"keyboard_navigation\": true\n  }\n}"
            },
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{userManagementServiceAccessToken}}",
                  "type": "string"
                }
              ]
            },
            "url": {
              "raw": "{{userManagementServiceBaseUrl}}/notifications/preferences",
              "host": ["{{userManagementServiceBaseUrl}}"],
              "path": ["notifications", "preferences"]
            }
          }
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{userManagementServiceAccessToken}}",
        "type": "string"
      }
    ]
  }
}
